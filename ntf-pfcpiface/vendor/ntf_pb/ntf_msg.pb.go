// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: ntf_msg.proto

package ntf_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NTFArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dpid       uint32 `protobuf:"varint,1,opt,name=dpid,proto3" json:"dpid,omitempty"`
	MaxEntries uint32 `protobuf:"varint,2,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"`
}

func (x *NTFArg) Reset() {
	*x = NTFArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ntf_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFArg) ProtoMessage() {}

func (x *NTFArg) ProtoReflect() protoreflect.Message {
	mi := &file_ntf_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFArg.ProtoReflect.Descriptor instead.
func (*NTFArg) Descriptor() ([]byte, []int) {
	return file_ntf_msg_proto_rawDescGZIP(), []int{0}
}

func (x *NTFArg) GetDpid() uint32 {
	if x != nil {
		return x.Dpid
	}
	return 0
}

func (x *NTFArg) GetMaxEntries() uint32 {
	if x != nil {
		return x.MaxEntries
	}
	return 0
}

type UserCentricNetworkToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenType     uint32   `protobuf:"varint,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	EncryptionKey string   `protobuf:"bytes,2,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
	Blacklist     []uint64 `protobuf:"varint,3,rep,packed,name=blacklist,proto3" json:"blacklist,omitempty"`
}

func (x *UserCentricNetworkToken) Reset() {
	*x = UserCentricNetworkToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ntf_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCentricNetworkToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCentricNetworkToken) ProtoMessage() {}

func (x *UserCentricNetworkToken) ProtoReflect() protoreflect.Message {
	mi := &file_ntf_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCentricNetworkToken.ProtoReflect.Descriptor instead.
func (*UserCentricNetworkToken) Descriptor() ([]byte, []int) {
	return file_ntf_msg_proto_rawDescGZIP(), []int{1}
}

func (x *UserCentricNetworkToken) GetTokenType() uint32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

func (x *UserCentricNetworkToken) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

func (x *UserCentricNetworkToken) GetBlacklist() []uint64 {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

type NTFEntryCreateArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *UserCentricNetworkToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are assignable to SetDscp:
	//	*NTFEntryCreateArg_Dscp
	SetDscp isNTFEntryCreateArg_SetDscp `protobuf_oneof:"set_dscp"`
	// Types that are assignable to SetRuleId:
	//	*NTFEntryCreateArg_RuleId
	SetRuleId isNTFEntryCreateArg_SetRuleId `protobuf_oneof:"set_rule_id"`
}

func (x *NTFEntryCreateArg) Reset() {
	*x = NTFEntryCreateArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ntf_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFEntryCreateArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFEntryCreateArg) ProtoMessage() {}

func (x *NTFEntryCreateArg) ProtoReflect() protoreflect.Message {
	mi := &file_ntf_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFEntryCreateArg.ProtoReflect.Descriptor instead.
func (*NTFEntryCreateArg) Descriptor() ([]byte, []int) {
	return file_ntf_msg_proto_rawDescGZIP(), []int{2}
}

func (x *NTFEntryCreateArg) GetToken() *UserCentricNetworkToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (m *NTFEntryCreateArg) GetSetDscp() isNTFEntryCreateArg_SetDscp {
	if m != nil {
		return m.SetDscp
	}
	return nil
}

func (x *NTFEntryCreateArg) GetDscp() uint32 {
	if x, ok := x.GetSetDscp().(*NTFEntryCreateArg_Dscp); ok {
		return x.Dscp
	}
	return 0
}

func (m *NTFEntryCreateArg) GetSetRuleId() isNTFEntryCreateArg_SetRuleId {
	if m != nil {
		return m.SetRuleId
	}
	return nil
}

func (x *NTFEntryCreateArg) GetRuleId() uint32 {
	if x, ok := x.GetSetRuleId().(*NTFEntryCreateArg_RuleId); ok {
		return x.RuleId
	}
	return 0
}

type isNTFEntryCreateArg_SetDscp interface {
	isNTFEntryCreateArg_SetDscp()
}

type NTFEntryCreateArg_Dscp struct {
	Dscp uint32 `protobuf:"varint,2,opt,name=dscp,proto3,oneof"`
}

func (*NTFEntryCreateArg_Dscp) isNTFEntryCreateArg_SetDscp() {}

type isNTFEntryCreateArg_SetRuleId interface {
	isNTFEntryCreateArg_SetRuleId()
}

type NTFEntryCreateArg_RuleId struct {
	RuleId uint32 `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3,oneof"`
}

func (*NTFEntryCreateArg_RuleId) isNTFEntryCreateArg_SetRuleId() {}

type NTFEntryModifyArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *UserCentricNetworkToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are assignable to SetDscp:
	//	*NTFEntryModifyArg_Dscp
	SetDscp isNTFEntryModifyArg_SetDscp `protobuf_oneof:"set_dscp"`
	// Types that are assignable to SetRuleId:
	//	*NTFEntryModifyArg_RuleId
	SetRuleId isNTFEntryModifyArg_SetRuleId `protobuf_oneof:"set_rule_id"`
}

func (x *NTFEntryModifyArg) Reset() {
	*x = NTFEntryModifyArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ntf_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFEntryModifyArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFEntryModifyArg) ProtoMessage() {}

func (x *NTFEntryModifyArg) ProtoReflect() protoreflect.Message {
	mi := &file_ntf_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFEntryModifyArg.ProtoReflect.Descriptor instead.
func (*NTFEntryModifyArg) Descriptor() ([]byte, []int) {
	return file_ntf_msg_proto_rawDescGZIP(), []int{3}
}

func (x *NTFEntryModifyArg) GetToken() *UserCentricNetworkToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (m *NTFEntryModifyArg) GetSetDscp() isNTFEntryModifyArg_SetDscp {
	if m != nil {
		return m.SetDscp
	}
	return nil
}

func (x *NTFEntryModifyArg) GetDscp() uint32 {
	if x, ok := x.GetSetDscp().(*NTFEntryModifyArg_Dscp); ok {
		return x.Dscp
	}
	return 0
}

func (m *NTFEntryModifyArg) GetSetRuleId() isNTFEntryModifyArg_SetRuleId {
	if m != nil {
		return m.SetRuleId
	}
	return nil
}

func (x *NTFEntryModifyArg) GetRuleId() uint32 {
	if x, ok := x.GetSetRuleId().(*NTFEntryModifyArg_RuleId); ok {
		return x.RuleId
	}
	return 0
}

type isNTFEntryModifyArg_SetDscp interface {
	isNTFEntryModifyArg_SetDscp()
}

type NTFEntryModifyArg_Dscp struct {
	Dscp uint32 `protobuf:"varint,2,opt,name=dscp,proto3,oneof"`
}

func (*NTFEntryModifyArg_Dscp) isNTFEntryModifyArg_SetDscp() {}

type isNTFEntryModifyArg_SetRuleId interface {
	isNTFEntryModifyArg_SetRuleId()
}

type NTFEntryModifyArg_RuleId struct {
	RuleId uint32 `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3,oneof"`
}

func (*NTFEntryModifyArg_RuleId) isNTFEntryModifyArg_SetRuleId() {}

type NTFEntryDeleteArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenType uint32 `protobuf:"varint,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
}

func (x *NTFEntryDeleteArg) Reset() {
	*x = NTFEntryDeleteArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ntf_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NTFEntryDeleteArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTFEntryDeleteArg) ProtoMessage() {}

func (x *NTFEntryDeleteArg) ProtoReflect() protoreflect.Message {
	mi := &file_ntf_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTFEntryDeleteArg.ProtoReflect.Descriptor instead.
func (*NTFEntryDeleteArg) Descriptor() ([]byte, []int) {
	return file_ntf_msg_proto_rawDescGZIP(), []int{4}
}

func (x *NTFEntryDeleteArg) GetTokenType() uint32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

var File_ntf_msg_proto protoreflect.FileDescriptor

var file_ntf_msg_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6e, 0x74, 0x66, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x6e, 0x74, 0x66, 0x2e, 0x70, 0x62, 0x22, 0x3d, 0x0a, 0x06, 0x4e, 0x54, 0x46, 0x41, 0x72,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x64, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x4e, 0x54, 0x46, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x12, 0x35, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x74, 0x66,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x73, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x73, 0x63, 0x70, 0x12, 0x19, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x72, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x73, 0x63, 0x70, 0x42,
	0x0d, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x96,
	0x01, 0x0a, 0x11, 0x4e, 0x54, 0x46, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x41, 0x72, 0x67, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x74, 0x66, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x64,
	0x73, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x04, 0x64, 0x73, 0x63,
	0x70, 0x12, 0x19, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x73, 0x63, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x4e, 0x54, 0x46, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ntf_msg_proto_rawDescOnce sync.Once
	file_ntf_msg_proto_rawDescData = file_ntf_msg_proto_rawDesc
)

func file_ntf_msg_proto_rawDescGZIP() []byte {
	file_ntf_msg_proto_rawDescOnce.Do(func() {
		file_ntf_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_ntf_msg_proto_rawDescData)
	})
	return file_ntf_msg_proto_rawDescData
}

var file_ntf_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ntf_msg_proto_goTypes = []interface{}{
	(*NTFArg)(nil),                  // 0: ntf.pb.NTFArg
	(*UserCentricNetworkToken)(nil), // 1: ntf.pb.UserCentricNetworkToken
	(*NTFEntryCreateArg)(nil),       // 2: ntf.pb.NTFEntryCreateArg
	(*NTFEntryModifyArg)(nil),       // 3: ntf.pb.NTFEntryModifyArg
	(*NTFEntryDeleteArg)(nil),       // 4: ntf.pb.NTFEntryDeleteArg
}
var file_ntf_msg_proto_depIdxs = []int32{
	1, // 0: ntf.pb.NTFEntryCreateArg.token:type_name -> ntf.pb.UserCentricNetworkToken
	1, // 1: ntf.pb.NTFEntryModifyArg.token:type_name -> ntf.pb.UserCentricNetworkToken
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ntf_msg_proto_init() }
func file_ntf_msg_proto_init() {
	if File_ntf_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ntf_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ntf_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCentricNetworkToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ntf_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFEntryCreateArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ntf_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFEntryModifyArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ntf_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NTFEntryDeleteArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ntf_msg_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*NTFEntryCreateArg_Dscp)(nil),
		(*NTFEntryCreateArg_RuleId)(nil),
	}
	file_ntf_msg_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*NTFEntryModifyArg_Dscp)(nil),
		(*NTFEntryModifyArg_RuleId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ntf_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ntf_msg_proto_goTypes,
		DependencyIndexes: file_ntf_msg_proto_depIdxs,
		MessageInfos:      file_ntf_msg_proto_msgTypes,
	}.Build()
	File_ntf_msg_proto = out.File
	file_ntf_msg_proto_rawDesc = nil
	file_ntf_msg_proto_goTypes = nil
	file_ntf_msg_proto_depIdxs = nil
}
